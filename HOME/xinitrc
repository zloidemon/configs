#!/bin/sh

# -*- coding: utf-8 -*-
# vim: set et sw=4 ts=4:

OSTYPE=$(uname -s)

PATH=${PATH}:${HOME}/.opt/bin:${HOME}/.opt/sbin

_X_USER_RESOURCES=${HOME}/.Xresources
_X_USER_MODMAP=${HOME}/.Xmodmap

if [ -f "${HOME}/.zsh/func/extract_xresources_value.sh" ]
then
    source ${HOME}/.zsh/func/extract_xresources_value.sh
fi

if [ -f "${HOME}/.zsh/func/checkbinary.sh" ]
then
    source ${HOME}/.zsh/func/checkbinary.sh
fi

if [ ${OSTYPE} = "FreeBSD" ]
then
    _X_SYS_RESOURCES=/usr/X11R6/lib/X11/xinit/.Xresources
    _X_SYS_MODMAP=/usr/X11R6/lib/X11/xinit/.Xmodmap
elif [ ${OSTYPE} = "Linux" ]
then
    if [ -f /etc/gentoo-release ]
    then
        _X_SYS_RESOURCES=/etc/X11/xinit/Xresources
        _X_SYS_MODMAP=/etc/X11/xinit/Xmodmap
    elif [ -f /etc/arch-release ]
    then
        true
    else
        echo "unknown Linux distro continue loading"
    fi
else
    echo "unknown OS ${OSTYPE} continue loading"
fi

# merge in defaults and keymaps

for l in en_US C
do
    _LOCALE=$(locale -a | fgrep ${l})
    if [ "x${_LOCALE}" = "x" ]
    then
        continue
    else
        echo "setting up ${_LOCALE} locale"
        export LC_ALL=${_LOCALE}
        export LC_CTYPE=${_LOCALE}

        break
    fi
done

if [ -f "${_X_SYS_RESOURCES}" ]
then
    xrdb -merge ${_X_SYS_RESOURCES}
fi


if [ -f "${_X_SYS_MODMAP}" ]
then
    xmodmap ${_X_SYS_MODMAP}
fi

if [ -f "${_X_USER_RESOURCES}" ]
then
    xrdb -merge ${_X_USER_RESOURCES}
fi

if [ -f "${_X_USER_MODMAP}" ]
then
    xmodmap ${_X_USER_MODMAP}
fi

# Setup settings into apps

if [ ${_F_EXTRACT_XRESOURCES_VALUE} -eq 1 ]
then
    exv() { extract_xresources_value $*; }

    export TZ=$(exv system.timezone)
    export QT_SCALE_FACTOR=$(exv screen.scale)

    # Setup Java options
    export _JAVA_OPTIONS=$(exv java.options)
    export _JAVA_AWT_WM_NONREPARENTING=$(exv java.awt.wm.nonreparenting)
    export AWT_TOOLKIT=$(exv java.awt.toolkit)

    # Setup Android
    export ANDROID_HOME=$(exv android.home)
    if [ "x${ANDROID_HOME}" != "x" ]
    then
        PATH=${PATH}:${ANDROID_HOME}/tools
    fi

    # Setup xkb layout
    if _checkbinary setxkbmap
    then
        exec setxkbmap \
            -layout "$(exv system.keyboard.layout)" \
            -option "grp:$(exv system.keyboard.grp),terminate:ctrl_alt_bksp" &
    fi

    # Setup xautolock
    if _checkbinary xautolock
    then
        _X_SCREEN_LOCKER=$(exv screen.x.locker)

        if _checkbinary ${_X_SCREEN_LOCKER}
        then
            exec xautolock -time "$(exv screen.x.lock)" \
                -locker ${_X_SCREEN_LOCKER} &
        else
            echo "locker ${_X_SCREEN_LOCKER} not found"
        fi
    fi

    # Setup window manager
    _X_SCREEN_MANAGER=$(exv screen.x.manager)
    if _checkbinary ${_X_SCREEN_MANAGER}
    then
        case ${_X_SCREEN_MANAGER} in
            i3) \
                export I3SOCK=${HOME}/.i3/$(exv i3.socket)
                exec i3
                ;;
            *) echo "window manger ${_X_SCREEN_MANAGER} not found";;
        esac
    fi
fi

# start some nice programs

#xscreensaver -lock-timeout 3 &
#tkremind&
#xv -quit -root ~/ctwm-themes/du/redbg.png
#xlogo -fg gray80 -bg gray80 -g 1152x24+0-0 &
#xload -hl black -bg gray80 -geometry 32x24-57-0 -fn 5x7 &
#asclock -shape -position +1092+836 -exe timetool&
#asmail -geometry -1-27 > /dev/null&
#/usr/local/bin/ctwm&
#xhost +freja
#xhost +zod
#xhost +balder
#xhost +mucus
#xhost +lex
#xset b 10 100 100
#xterm -iconic -fg black -bg yellow -cr yellow -C -T console -n console

#exec conky -d &
#exec feh --bg-scale .bg.jpg &
#xwinwrap -ni -st -sp -nf -ov -fs -- /usr/local/bin/xscreensaver-hacks/glmatrix -speed 5 -binary -root -window-id WID &
#twm &

#xinput --set-prop 'TPPS/2 IBM TrackPoint' 'libinput Accel Speed' 1 & # setup speed trackpad
#exec xscreensaver -no-splash &

